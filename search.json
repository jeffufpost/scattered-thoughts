[
  {
    "objectID": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#motivation-for-write-up",
    "href": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#motivation-for-write-up",
    "title": "Epidemic modeling - Part 2",
    "section": "Motivation for write-up",
    "text": "Motivation for write-up\nThis is the 2nd part of a multi-part series blog post on modeling in epidemiology.\nThe COVID-19 pandemic has brought a lot of attention to the study of epidemiology and more specifically to the various mathematical models that are used to inform public health policies. Everyone has been trying to understand the growth or slowing of new cases and trying to predict the necessary sanitary resources. This blog post attempts to explain the foundations for some of the most used models and enlighten the reader on two key points.\nAfter introducing the concepts of compartmentalization and disease dynamics in the first blog post, this second part is focused on developing a deterministic numerical solution for the SEIR model discussed there.\nWhile normally the goal is to use real-world data to infer characteristics of the underlying disease (as will be done in later blog posts), here we want to use simulate the spread of a COVID-19 like disease in a population of 10000, and look at the effects of the different parameters on the spread."
  },
  {
    "objectID": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#recall-seir-model-equations",
    "href": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#recall-seir-model-equations",
    "title": "Epidemic modeling - Part 2",
    "section": "Recall SEIR model equations",
    "text": "Recall SEIR model equations\nSee the first blog post for derivation.\n\nContinuous-time:\n\n\\(\\frac{ds(t)}{dt}=-\\beta i(t) s(t)\\)\n\\(\\frac{de(t)}{dt}=\\beta i(t) s(t) -  \\sigma e(t)\\)\n\\(\\frac{di(t)}{dt}=\\sigma e(t) - \\gamma i(t)\\)\n\\(\\frac{dr(t)}{dt}=\\gamma i(t)\\)\n\nDiscrete-time:\n\n\\(\\Delta S = -\\beta I S \\Delta T\\)\n\\(\\Delta E = (\\beta I S -\\sigma E) \\Delta T\\)\n\\(\\Delta I = (\\sigma E - \\gamma I) \\Delta T\\)\n\\(\\Delta R = \\gamma I \\Delta T\\)"
  },
  {
    "objectID": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#numerical-solution-to-this-deteministic-population-level-model",
    "href": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#numerical-solution-to-this-deteministic-population-level-model",
    "title": "Epidemic modeling - Part 2",
    "section": "Numerical solution to this deteministic population level model",
    "text": "Numerical solution to this deteministic population level model\n\nCoding the SEIR model\nTo build the SEIR model we simply use the discrete-time set of equations above.\nThe model will thus take as input the following:\n\nInitial proportion of S, E, I, and R in the population\n\\(\\beta\\) parameter pertaining to the population in question\n\\(\\sigma\\) and \\(\\gamma\\) parameters pertaining to the disease\nNumbers of days to run the simulation\n\n\n\nCode\n# Import required libraries\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\n\n\nCode\n# Let's build a numerical solution\n\ndef seir_model(init, parms, days):\n    S_0, E_0, I_0, R_0 = init\n    Epd, Ipd, Rpd = [0], [0], [0]\n    S, E, I, R = [S_0], [E_0], [I_0], [R_0]\n    dt=0.1\n    t = np.linspace(0,days,int(days/dt))\n    sigma, beta, gam = parms\n    for _ in t[1:]:\n        next_S = S[-1] - beta*S[-1]*I[-1]*dt\n        Epd.append(beta*S[-1]*I[-1]*dt)\n        next_E = E[-1] + (beta*S[-1]*I[-1] - sigma*E[-1])*dt\n        Ipd.append(sigma*E[-1]*dt)\n        next_I = I[-1] + (sigma*E[-1] - gam*I[-1])*dt\n        Rpd.append(gam*I[-1]*dt)\n        next_R = R[-1] + (gam*I[-1])*dt\n        S.append(next_S)\n        E.append(next_E)\n        I.append(next_I)\n        R.append(next_R)\n    return np.stack([S, E, I, R, Epd, Ipd, Rpd]).T\n\n\n\n\nCOVID-19 parameters\nSimulation parameters used for plot below:\n\nDays = 100\nPopulation = 10000\nNumber of susceptible people on day 0 = 9999\nNumber of exposed people on day 0 = 1\nNo infected or recovered people on day 0\n\nA lot of research is ongoing into the COVID-19 characteristics of \\(\\beta\\), \\(\\sigma\\), and \\(\\gamma\\).\nHowever, these are complex studies that require a lot of data and so far we have little information to go on.\nThe literature suggests the following:\n\n\\(\\underline{T_{Incubation}}\\):\n\nThe mean is 5-6 days but it can range anywhere from 2-14 days 1 2\nAnother paper reports a mean incubation period of 5.2 days and the 95th percentile at 12.5 days 3.\nThere are reports of pre-symptomatic infections4, but these are reportedly rare 5 so in the following models we will assume: \\[T_{Incubation} = T_{Latent}\\] And so: \\[\\sigma = \\frac{1}{5.2} days^{-1}\\]\n\n\\(\\underline{T_{Infectious}}\\):\n\nAgain it is very difficult to say for sure and the period of communicability is very uncertain for COVID-19.\nResearch suggests a median of 20 days of viral shedding after onset of symptoms 6.\nRanging from 8 to 37 days in survivors.\nWhile it is noted PCR positivity does not necessarily reflect the infectious period (virus may not be viable but the PCR amplification will result in a positive), for the purpose of this blog post we will assume the following: \\[T_{Infectious} = T_{Clinical}\\] To obtain an exponential distribution with median M, the scale A is calculated as follows: \\[A = \\frac{M}{\\ln2} = \\frac{20}{\\ln2}\\] This results in \\[\\gamma = \\frac{\\ln2}{20} = \\frac{1}{28.85}\\ days^{-1}\\] * \\(\\underline{Beta= \\beta}\\):\nWhile difficult to estimate this parameter as there is a lot of variation between countries, cultures, societal norms, etc.. a little thought experiment can help us evaluate the value for \\(\\beta = r\\rho\\) in Switerland or France for example.\nIf no control measures are put in place and people do not change habits (as is the case in this blog post), we can expect the following:\n\nAverage number of contacts per day:\n\n\\[r = 10\\ contacts\\ per\\ day\\]\n\nAverage probability of transmission from contact:\n\n\\[\\rho = 5\\%\\]\nAnd so: \\[\\beta = r\\rho = 0.5\\]\n\n\nRunning the simulation\n\n\nCode\n#Define parameters\ndays = 200\nN = 10000\ninit = 1 - 1/N, 1/N, 0, 0\nsigma = 1/5.2\nbeta = 0.5\ngam = 1/28.85\nparms = sigma, beta, gam\n\n# Run simulation\nresults_avg = seir_model(init, parms, days)\n\n\n\n\nCode\nfig = go.Figure(data=[       \n    go.Scatter(name='S', x=np.linspace(0,days,days*10), y=results_avg.T[0], line={'dash':'solid', 'color':'blue'}),\n    go.Scatter(name='E', x=np.linspace(0,days,days*10), y=results_avg.T[1], line={'dash':'solid', 'color':'yellow'}),\n    go.Scatter(name='I', x=np.linspace(0,days,days*10), y=results_avg.T[2], line={'dash':'solid', 'color':'red'}), \n    go.Scatter(name='R', x=np.linspace(0,days,days*10), y=results_avg.T[3], line={'dash':'solid', 'color':'green'}),\n])\n\nfig.update_layout(\n    xaxis_title = 'Day',\n    yaxis_title = 'Proportion of population',\n  title={\n      'text':'Deterministic SEIR model - COVID-19 parameters',\n      'x':0.5,\n      'xanchor':'center'\n    }\n)\nfig.update_layout(height=500, template=\"ggplot2\")\n\nfig.show()"
  },
  {
    "objectID": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#qualitative-analysis-of-beta-sigma-and-gamma",
    "href": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#qualitative-analysis-of-beta-sigma-and-gamma",
    "title": "Epidemic modeling - Part 2",
    "section": "Qualitative analysis of \\(\\beta\\), \\(\\sigma\\), and \\(\\gamma\\)",
    "text": "Qualitative analysis of \\(\\beta\\), \\(\\sigma\\), and \\(\\gamma\\)\n\nEffect of \\(\\sigma\\) (\\(T_{Latent}\\))\nLet’s have a look at the effect of \\(\\sigma\\) (or inversely, the latent period) on the SEIR simulation.\nA higher \\(\\sigma\\) means shorter average latent period, and vice-versa.\n\n\nCode\n## Let's try to see how the model changes \ndays = 1000\nN = 10000\ninit = 1 - 1/N, 1/N, 0, 0\nsigma_high = 1   # 1 --&gt; Average 1 day from E --&gt; I (ressembles SIR model)\nsigma_low = 1/100 #10 days on average, twice as long as COVID-19\nsigma_covid = 1/5.2\nbeta = 0.5\ngam = 1/28.85\nparms_fastEI = sigma_high, beta, gam\nparms_slowEI = sigma_low, beta, gam\nparms_avg = sigma_covid, beta, gam\n\n# Run simulation\nresults_fastEtoI = seir_model(init, parms_fastEI, days)\nresults_slowEtoI = seir_model(init, parms_slowEI, days)\nresults_avg = seir_model(init, parms_avg, days)\n\n\n\n\nCode\nfig = go.Figure(data=[    \n    go.Scatter(name=r'$S:\\sigma_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[0], line={'dash':'solid', 'color':'blue'}, legendgroup=\"COVID\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[1], line={'dash':'solid', 'color':'yellow'}, legendgroup=\"COVID\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[2], line={'dash':'solid', 'color':'red'}, legendgroup=\"COVID\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[3], line={'dash':'solid', 'color':'green'}, legendgroup=\"COVID\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{high}$', x=np.linspace(0,days,days*10), y=results_fastEtoI.T[0], line={'dash':'dash','color':'blue'}, legendgroup=\"high\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{high}$', x=np.linspace(0,days,days*10), y=results_fastEtoI.T[1], line={'dash':'dash', 'color':'yellow'}, legendgroup=\"high\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{high}$', x=np.linspace(0,days,days*10), y=results_fastEtoI.T[2], line={'dash':'dash', 'color':'red'}, legendgroup=\"high\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{high}$', x=np.linspace(0,days,days*10), y=results_fastEtoI.T[3], line={'dash':'dash', 'color':'green'}, legendgroup=\"high\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{low}$', x=np.linspace(0,days,days*10), y=results_slowEtoI.T[0], line={'dash':'dot', 'color':'blue'}, legendgroup=\"slow\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{low}$', x=np.linspace(0,days,days*10), y=results_slowEtoI.T[1], line={'dash':'dot', 'color':'yellow'}, legendgroup=\"slow\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{low}$', x=np.linspace(0,days,days*10), y=results_slowEtoI.T[2], line={'dash':'dot', 'color':'red'}, legendgroup=\"slow\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\sigma_{low}$', x=np.linspace(0,days,days*10), y=results_slowEtoI.T[3], line={'dash':'dot', 'color':'green'}, legendgroup=\"slow\", hoverinfo='x+y'),\n])\n\nfig.update_layout(\n    template='ggplot2',\n    height=500,\n    xaxis_title = 'Day',\n    yaxis_title = 'Proportion of population',\n    title={\n        'text':r'$\\text{Effect of } \\sigma \\ \\text{on Deterministic SEIR model}$',\n        'x':0.5,\n        'xanchor':'center'\n    }\n)\n\nfig.show()\n\n\n                                                \n\n\nWe notice a few things from the plot above on the impact of the average time from E → I:\n\nThe shorter the latent period:\n\nthe faster the epidemic propogates in the population\nthe higher the peak of infected individuals will be (meaning a higher chance hospital resources will be saturated)\n\nHowever, the latent period has no impact on the total number of individuals infected over the entire time of the epidemic.\n\n\n\nEffect of \\(\\beta = r~\\rho\\)\nLet’s have a look at the effect of \\(\\beta\\) on the SEIR simulation.\nA higher \\(\\beta\\) can either mean a higher average number of contacts per day (\\(r\\)) in the population and/or a higher probability of transmission of disease from I → S.\nThe opposite holds also.\n\n\nCode\n## Let's try to see how the model changes \ndays = 500\nN = 10000\ninit = 1 - 1/N, 1/N, 0, 0\nsigma_avg = 1/5.2\nbeta_avg = 0.5\nbeta_noepi = 1/30\nbeta_low = 0.1\nbeta_high = 4\ngam = 1/28.85\nparms_avg = sigma_avg, beta_avg, gam\nparms_noepi = sigma_avg, beta_noepi, gam \nparms_low = sigma_avg, beta_low, gam\nparms_high = sigma_avg, beta_high, gam\n\n# Run simulation\nresults_avg = seir_model(init, parms_avg, days)\nresults_noepi = seir_model(init, parms_noepi, days)\nresults_low = seir_model(init, parms_low, days)\nresults_high = seir_model(init, parms_high, days)\n\n\n\n\nCode\nfig = go.Figure(data=[    \n    go.Scatter(name=r'$S:\\beta_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[0], line={'dash':'solid', 'color':'blue'}, legendgroup=\"COVID\"),\n    go.Scatter(name=r'$E:\\beta_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[1], line={'dash':'solid', 'color':'yellow'}, legendgroup=\"COVID\"), \n    go.Scatter(name=r'$I:\\beta_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[2], line={'dash':'solid', 'color':'red'}, legendgroup=\"COVID\"),\n    go.Scatter(name=r'$R:\\beta_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[3], line={'dash':'solid', 'color':'green'}, legendgroup=\"COVID\"),\n    go.Scatter(name=r'$S:\\beta_{noepi}$', x=np.linspace(0,days,days*10), y=results_noepi.T[0], line={'dash':'dashdot','color':'blue'}, legendgroup=\"noepi\"),\n    go.Scatter(name=r'$E:\\beta_{noepi}$', x=np.linspace(0,days,days*10), y=results_noepi.T[1], line={'dash':'dashdot', 'color':'yellow'}, legendgroup=\"noepi\"),\n    go.Scatter(name=r'$I:\\beta_{noepi}$', x=np.linspace(0,days,days*10), y=results_noepi.T[2], line={'dash':'dashdot', 'color':'red'}, legendgroup=\"noepi\"),\n    go.Scatter(name=r'$R:\\beta_{noepi}$', x=np.linspace(0,days,days*10), y=results_noepi.T[3], line={'dash':'dashdot', 'color':'green'}, legendgroup=\"noepi\"),\n    go.Scatter(name=r'$S:\\beta_{low}$', x=np.linspace(0,days,days*10), y=results_low.T[0], line={'dash':'dash','color':'blue'}, legendgroup=\"low\"),\n    go.Scatter(name=r'$E:\\beta_{low}$', x=np.linspace(0,days,days*10), y=results_low.T[1], line={'dash':'dash', 'color':'yellow'}, legendgroup=\"low\"),\n    go.Scatter(name=r'$I:\\beta_{low}$', x=np.linspace(0,days,days*10), y=results_low.T[2], line={'dash':'dash', 'color':'red'}, legendgroup=\"low\"),\n    go.Scatter(name=r'$R:\\beta_{low}$', x=np.linspace(0,days,days*10), y=results_low.T[3], line={'dash':'dash', 'color':'green'}, legendgroup=\"low\"),\n    go.Scatter(name=r'$S:\\beta_{high}$', x=np.linspace(0,days,days*10), y=results_high.T[0], line={'dash':'dot', 'color':'blue'}, legendgroup=\"high\"),\n    go.Scatter(name=r'$E:\\beta_{high}$', x=np.linspace(0,days,days*10), y=results_high.T[1], line={'dash':'dot', 'color':'yellow'}, legendgroup=\"high\"),\n    go.Scatter(name=r'$I:\\beta_{high}$', x=np.linspace(0,days,days*10), y=results_high.T[2], line={'dash':'dot', 'color':'red'}, legendgroup=\"high\"),\n    go.Scatter(name=r'$R:\\beta_{high}$', x=np.linspace(0,days,days*10), y=results_high.T[3], line={'dash':'dot', 'color':'green'}, legendgroup=\"high\"),\n])\n\nfig.update_layout(\n    template='ggplot2',\n    height=500,\n    xaxis_title = 'Day',\n    yaxis_title = 'Proportion of population',\n    title={\n        'text':r'$\\text{Effect of } \\beta \\ \\text{on Deterministic SEIR model}$',\n        'x':0.5,\n        'xanchor':'center'\n    }\n)\n\nfig.show()\n\n\n                                                \n\n\nWe notice a few things from the plot above on the impact of \\(\\beta\\):\n\nThe higher \\(\\beta\\) is:\n\nthe faster the epidemic seems to propogate in the population\nthe higher the peak of infected individuals seems to be (meaning a higher chance hospital resources will be saturated)\n\n\\(\\beta\\) also appears to affect the overall number of people infected over the course of the epidemic\nA low \\(\\beta\\) means a low \\(R_0\\) and we have seen in the first part of this blog that no epidemic occurs when \\(R_0 &lt; 1\\)\nBut even if \\(R_0 &gt; 1\\), keeping \\(\\beta\\) low reduces the total number of people infected\n\n\n\nEffect of \\(\\gamma\\) (\\(T_{Infectious}\\))\nLet’s have a look at the effect of \\(\\gamma\\) on the SEIR simulation.\nA higher \\(\\gamma\\) means a shorter infectious period, and vice-versa.\n\n\nCode\n## Let's try to see how the model changes \ndays = 500\nN = 10000\ninit = 1 - 1/N, 1/N, 0, 0\nsigma_avg = 1/5.2\nbeta = 0.5\ngam_avg = 1/28.85\ngam_low = 1/200\ngam_high = 0.2\nparms_fastIR = sigma_avg, beta, gam_high\nparms_slowIR = sigma_avg, beta, gam_low\nparms_avg = sigma_avg, beta, gam_avg\n\n# Run simulation\nresults_fastItoR = seir_model(init, parms_fastIR, days)\nresults_slowItoR = seir_model(init, parms_slowIR, days)\nresults_avg = seir_model(init, parms_avg, days)\n\n\n\n\nCode\nfig = go.Figure(data=[    \n    go.Scatter(name=r'$S:\\gamma_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[0], line={'dash':'solid', 'color':'blue'}, legendgroup=\"COVID\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[1], line={'dash':'solid', 'color':'yellow'}, legendgroup=\"COVID\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[2], line={'dash':'solid', 'color':'red'}, legendgroup=\"COVID\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{COVID}$', x=np.linspace(0,days,days*10), y=results_avg.T[3], line={'dash':'solid', 'color':'green'}, legendgroup=\"COVID\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{high}$', x=np.linspace(0,days,days*10), y=results_fastItoR.T[0], line={'dash':'dash','color':'blue'}, legendgroup=\"fast\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{high}$', x=np.linspace(0,days,days*10), y=results_fastItoR.T[1], line={'dash':'dash', 'color':'yellow'}, legendgroup=\"fast\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{high}$', x=np.linspace(0,days,days*10), y=results_fastItoR.T[2], line={'dash':'dash', 'color':'red'}, legendgroup=\"fast\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{high}$', x=np.linspace(0,days,days*10), y=results_fastItoR.T[3], line={'dash':'dash', 'color':'green'}, legendgroup=\"fast\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{low}$', x=np.linspace(0,days,days*10), y=results_slowItoR.T[0], line={'dash':'dot', 'color':'blue'}, legendgroup=\"slow\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{low}$', x=np.linspace(0,days,days*10), y=results_slowItoR.T[1], line={'dash':'dot', 'color':'yellow'}, legendgroup=\"slow\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{low}$', x=np.linspace(0,days,days*10), y=results_slowItoR.T[2], line={'dash':'dot', 'color':'red'}, legendgroup=\"slow\", hoverinfo='x+y'),\n    go.Scatter(name=r'$S:\\gamma_{low}$', x=np.linspace(0,days,days*10), y=results_slowItoR.T[3], line={'dash':'dot', 'color':'green'}, legendgroup=\"slow\", hoverinfo='x+y'),\n])\n\nfig.update_layout(\n    template='ggplot2',\n    height=500,\n    xaxis_title = 'Day',\n    yaxis_title = 'Proportion of population',\n    title={\n        'text':r'$\\text{Effect of } \\gamma \\ \\text{on Deterministic SEIR model}$',\n        'x':0.5,\n        'xanchor':'center'\n    }\n)\n\nfig.show()\n\n\n                                                \n\n\nWe notice a few things from the plot above on the impact of the infectious period:\n\nThe longer the infectious period:\n\nthe faster the epidemic propogates in the population\nthe higher the peak of infectious individuals will be and the longer it will last (meaning a higher chance hospital resources will be saturated)\n\nAs opposed to the latent period above, but similarly as \\(\\beta\\), the infectious period has an impact on the total number of individuals infected over the entire time of the epidemic\nWith no epidemic if \\(\\gamma &gt; \\beta\\)"
  },
  {
    "objectID": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#discussion",
    "href": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#discussion",
    "title": "Epidemic modeling - Part 2",
    "section": "Discussion",
    "text": "Discussion\nSo we can see the latent and infectious periods, along with the value of \\(\\beta\\) are critical components in how the model will react.\nWorth noting also is that the higher \\(R_0\\) is, the faster the epidemic spreads and the higher the peak of infectious individuals will be (see further blog posts for some nuance on this).\nNotably, and as predicted in part 1 of the blog series, no epidemic occurs if: \\[R_0 &lt; 1\\] In other words, no epidemic if: \\[\\beta &lt; \\gamma\\]\nThere are major flaws with this model however. While this model is deterministic and uses average time to model \\(\\sigma\\) and \\(\\gamma\\), this is a major flaw and does not represent the reality for most diseases.\nPart 3 of this blog series will discuss this further."
  },
  {
    "objectID": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#footnotes",
    "href": "posts/2020-03-18-deterministic-numerical-solutions/2020-03-18-deterministic-numerical-solutions.html#footnotes",
    "title": "Epidemic modeling - Part 2",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nWHO COVID-19 Situation Report 73↩︎\nCDC COVID-19 FAQ↩︎\nEarly Transmission Dynamics in Wuhan, China, of Novel Coronavirus–Infected Pneumonia↩︎\nCDC COVID-19 FAQ↩︎\nWHO COVID-19 Situation Report 73↩︎\nClinical course and mortality risk of server COVID-19↩︎"
  },
  {
    "objectID": "posts/2020-03-12-COVID-19-Tracker/2020-03-12-COVID-19-Tracker.html#link-to-tracker",
    "href": "posts/2020-03-12-COVID-19-Tracker/2020-03-12-COVID-19-Tracker.html#link-to-tracker",
    "title": "COVID-19 Tracker Map",
    "section": "Link to tracker",
    "text": "Link to tracker\nFollow this link."
  },
  {
    "objectID": "posts/2020-03-12-COVID-19-Tracker/2020-03-12-COVID-19-Tracker.html#about",
    "href": "posts/2020-03-12-COVID-19-Tracker/2020-03-12-COVID-19-Tracker.html#about",
    "title": "COVID-19 Tracker Map",
    "section": "About",
    "text": "About\nThere are already many great ways to visualize the spread of sars-cov-2 around the world. I’ve made another one for family and friends that has the world on one page and France on another.\nYou can click on the countries for more details on the world map.\nLikewise you can click on specific departments to see more detail on the French map.\nThe world map uses data aggregated by the John Hopkins University CSSE.\nThe french map uses hospitalization and intensive care data from Sante Publique France."
  },
  {
    "objectID": "posts/2020-03-12-COVID-19-Tracker/2020-03-12-COVID-19-Tracker.html#future-blog-post-about-building-the-site",
    "href": "posts/2020-03-12-COVID-19-Tracker/2020-03-12-COVID-19-Tracker.html#future-blog-post-about-building-the-site",
    "title": "COVID-19 Tracker Map",
    "section": "Future blog post about building the site",
    "text": "Future blog post about building the site\nThe site is built using Plotly Dash and deployed to Heroku.\nI will likely make a blog post detailing how to build the app and deploy it."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Homepage\nElectrical engineer by background, but enthusiast of all things data, electronics, governance, development, global health, skiing, football, and many other things."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Scattered Thoughts",
    "section": "",
    "text": "“Epidemic modeling - Part 5”\n\n\n\n\n\n\n\n\n\n\n\nJeffrey Post\n\n\n\n\n\n\n\n&lt;!-- img(9CEB782EFEE6)[progressive=false, height=]:listing:posts/2020-04-02-convolution/2020-04-02-convolution.html --&gt;\n\n\n\n\nEpidemic modeling - Part 7\n\n\n\n\n\n&lt;!-- desc(5A0113B34292)[max=175]:posts/2020-04-02-convolution/2020-04-02-convolution.html --&gt;\n\n\n\n\n&lt;div class=\"listing-author\"&gt;\nJeffrey Post\n&lt;/div&gt;\n\n\n\n\n\n\n&lt;!-- img(9CEB782EFEE6)[progressive=false, height=]:listing:posts/2020-06-02-real-world/2020-06-02-real-world.html --&gt;\n\n\n\n\nEpidemic modeling - Part 8\n\n\n\n\n\n&lt;!-- desc(5A0113B34292)[max=175]:posts/2020-06-02-real-world/2020-06-02-real-world.html --&gt;\n\n\n\n\n&lt;div class=\"listing-author\"&gt;\nJeffrey Post\n&lt;/div&gt;\n\n\n\n\n\n\n&lt;!-- img(9CEB782EFEE6)[progressive=false, height=]:listing:posts/2021-05-07-stochastic_HIV_model/2021-05-07-stochastic_HIV_model.html --&gt;\n\n\n\n\nHIV modeling\n\n\n\n\n\n&lt;!-- desc(5A0113B34292)[max=175]:posts/2021-05-07-stochastic_HIV_model/2021-05-07-stochastic_HIV_model.html --&gt;\n\n\n\n\n&lt;div class=\"listing-author\"&gt;\nJeffrey Post\n&lt;/div&gt;\n\n\n\n\n\n\n&lt;!-- img(9CEB782EFEE6)[progressive=false, height=]:listing:posts/2021_05_05_stochastic_HIV_model/2021_05_05_stochastic_HIV_model.html --&gt;\n\n\n\n\nHIV modeling\n\n\n\n\n\n&lt;!-- desc(5A0113B34292)[max=175]:posts/2021_05_05_stochastic_HIV_model/2021_05_05_stochastic_HIV_model.html --&gt;\n\n\n\n\n&lt;div class=\"listing-author\"&gt;\nJeffrey Post\n&lt;/div&gt;\n\n\n\n\n\n\n\n\n\n\n\nEpidemic modeling - Part 3\n\n\n\n\n\n\nprobability distributions\n\n\nmodeling\n\n\nSEIR\n\n\nepidemiology\n\n\n\nExamining the major flaw of the deterministic SEIR model\n\n\n\n\n\nMar 25, 2020\n\n\nJeffrey Post\n\n\n\n\n\n\n\n\n\n\n\n\nEpidemic modeling - Part 2\n\n\n\n\n\n\nmodeling\n\n\ncompartmentalization\n\n\nSEIR\n\n\nepidemiology\n\n\ndisease dynamics\n\n\n\nA deterministic numerical SEIR model\n\n\n\n\n\nMar 18, 2020\n\n\nJeffrey Post\n\n\n\n\n\n\n\n\n\n\n\n\nEpidemic modeling - Part 1\n\n\n\n\n\n\nmodeling\n\n\ncompartmentalization\n\n\nSEIR\n\n\nepidemiology\n\n\ndisease dynamics\n\n\n\nCompartmentalization models and disease dynamics\n\n\n\n\n\nMar 15, 2020\n\n\nJeffrey Post\n\n\n\n\n\n\n\n\n\n\n\n\nCOVID-19 Tracker Map\n\n\n\n\n\n\nCOVID-19\n\n\nDashboards\n\n\nPlotly\n\n\n\nA link to my COVID-19 map tracker\n\n\n\n\n\nMar 12, 2020\n\n\nJeffrey Post\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html",
    "href": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html",
    "title": "Epidemic modeling - Part 1",
    "section": "",
    "text": "This is the 1st part of a multi-part series blog post on modeling in epidemiology.\nThe COVID-19 pandemic has brought a lot of attention to the study of epidemiology and more specifically to the various mathematical models that are used to inform public health policies. Everyone has been trying to understand the growth or slowing of new cases and trying to predict the necessary sanitary resources. This blog post attempts to explain the foundations for some of the most used models and enlighten the reader on a few important points.\nIn this first post I want to introduce the concept of compartmentalization and how it forms the basis for studying disease dynamics on the population level."
  },
  {
    "objectID": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#motivation-for-write-up",
    "href": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#motivation-for-write-up",
    "title": "Epidemic modeling - Part 1",
    "section": "",
    "text": "This is the 1st part of a multi-part series blog post on modeling in epidemiology.\nThe COVID-19 pandemic has brought a lot of attention to the study of epidemiology and more specifically to the various mathematical models that are used to inform public health policies. Everyone has been trying to understand the growth or slowing of new cases and trying to predict the necessary sanitary resources. This blog post attempts to explain the foundations for some of the most used models and enlighten the reader on a few important points.\nIn this first post I want to introduce the concept of compartmentalization and how it forms the basis for studying disease dynamics on the population level."
  },
  {
    "objectID": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#how-to-model-infectious-diseases-on-population-level",
    "href": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#how-to-model-infectious-diseases-on-population-level",
    "title": "Epidemic modeling - Part 1",
    "section": "How to model infectious diseases on population level ?",
    "text": "How to model infectious diseases on population level ?\n\nCompartments\nWhen modelling infectious diseases, and pandemics in particular, a key ask is to predict the number of infected people at any given time in order to estimate the sanitary resources that will be necessary.\nFrom this simple qestion results the idea of compartmentalization of the population i.e. the division of the population into the two most basic categories:\n\nthose that are infected\nthose that are not\n\nThis is ultimately the foundation for all compartmental models in epidemiology.\nThe nuances between the models then come from how the above two groups are further compartmentalized. That is to say, how we decide the composition of the infected and the not-infected groups.\nFor example, the non-infected group could be further sub-categorized into:\n\nSusceptible\nImmune\n\nAnd the infected group into:\n\nAsymptomatic\nSymptomatic\n\nOr, another option, into:\n\nNo treatment necessary\nRequire treatment:\n\nLocal Doctor visit\nHospitalization\nAdmitted to intensive care unit\n\n\nAs you can see there are many ways to do this, but the more categories you have, the more difficult it might become to model. Usually we determine these subcategories in order to match available data.\n\n\nDynamics\nWhile the compartments describe the state any individual can be in at a certain point in time, the dynamics describe the ways in which the compartments interact with each other.\nI want to underline the separation between disease dynamics on the individual level, and that on the population level below.\n\nIndividual level disease dynamics:\n\nThis describes, on the individual level, the progression of the disease i.e. how one person can go from one state to another (one compartment to another)\nFor example: how does a healthy person become ill and what is the clinical course of the disease for this person?\n\nPopulation-level dynamics:\n\nOn the other hand, the population level dynamics describe, on a population level, how the total number of individuals in each compartment vary over time.\nWe will see more on this in the next blog posts.\n\n\nTwo simple examples - the SIR and SEIR models\nLet’s have a look at a basic compartmental model, first the SIR model.\n\nS –&gt; Susceptible state:\n\nAn S individual is simply someone susceptible to the disease, that is anyone in the population who is healthy and not immune to the disease.\n\nI –&gt; Infectious state:\n\nOnce an individual is exposed to the disease he will develop this disease and become infectious.\n\nR –&gt; Recovered state:\n\nAn individual will either fight off the infection (with the help or not of treatment) or die. These are all included in the R state.\nIn the basic SIR model, anyone R has aquired full and infinite immunity and cannot catch the disease again (of course many variations can be included to reflect more closely a disease).\nIn this write-up and in the following blog posts we will focus on the SEIR models, which are similar to the SIR compartments above with the additional E state between S and I.\n\nE –&gt; Exposed state:\n\nThe exposed state is the state when an individual has been exposed to the disease, but has not become infectious yet.\n\n\nSome important vocabulary\n\n\\(\\underline{Infectious\\ period:}\\)\n\nAlso called the period of communicability, the infectious period is the time during which an individual can transmit the disease to another: \\(T_{Infectious}\\)\n\n\\(\\underline{Clinical\\ infection\\ period:}\\)\n\nThis period corresponds to the period where the infected indvidual shows symptoms: \\(T_{Clinical}\\)\n\n\\(\\underline{Latent\\ period:}\\)\n\nThe latent period is the time between exposure of an individual and the start of the period of communicability of that individual: \\(T_{Latent}\\)\n\n\\(\\underline{Incubation\\ period:}\\)\n\nThe incubation period on the other hand, is the time from exposure of an individual to development of the infection (appearance of disease): \\(T_{Incubation}\\)\nIt should be noted the latent period and incubation period are not necessarily the same.\n\n\\(\\underline{T_{Latent} &lt; T_{Incubation}}\\):\n\nIn this case, an individual who has been exposed becomes infectious before the development of disease.\nWe call this a subclinical infection and during that time the individual is called an asymptomatic carrier.\n\n\\(\\underline{T_{Latent} &gt; T_{Incubation}:}\\)\n\nIn other cases, the latent period can be longer than the incubation period, eg: smallpox.\n\n\\(\\underline{T_{Latent} + T_{Infectious} &gt; T_{Incubation} + T_{Clinical}:}\\)\n\nAnother case of subclinical infection resulting in asymptomatic carriers occurs when the end of clinical infection (of disease) happens earlier than the end of the period of communicability (see Wikipedia figure below)\nOverall, these asymptomatic carriers can be a significant difficutly to overcome epidemics.\n\n\n\\(\\underline{Basic\\ reproduction\\ number:}\\)\n\nThe basic reproduction number \\(R_0\\) is the measure of secondary infections in a susceptible population.\nIn other words, it is the number of people that each infectious individual will infect over the time of their infectious period.\nExample:\nIf an infectious individual infects 3 other individuals over the course of his infection, his \\(R_0\\) is 3.\nThis number is a very important element in the spreading dynamics (see derivation below)."
  },
  {
    "objectID": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#a-closer-look-at-the-seir-model",
    "href": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#a-closer-look-at-the-seir-model",
    "title": "Epidemic modeling - Part 1",
    "section": "A closer look at the SEIR model",
    "text": "A closer look at the SEIR model\n\nIndividual-level disease dynamic\nAs explained above, the individual-level disease dynamic describes the progression of disease within an individual i.e. the progression of an individual from one state to another.\n\nIn the models used here (SEIR model), an individual starts at S (although an initial exposed or infectious person is injected into the population at time t=0).\nIf exposed to the disease he will move into the state E.\nAfter which he will move to the I state with probability 1, but in a time unique to himself.\nAgain after which he will move into the state R with probability 1, and again in a time unique to him.\nFrom state R he will stay in state R (either dead or has aquired full and inifite immunity).\n\nLet’s have a closer look:\n\nS → E\nThe chances of an individual going from S → E depends on three things:\n\nthe number of contacts the person has per unit time (given by \\(r\\))\nthe chance a given contact is with an I - infectious individual (the higher the number of I in the population, the higher the chance)\nthe chance of an S contracting the disease from a contact with an I (given by \\(\\rho\\))\n\n\n\nE → I\nThe latent period\nAll people exposed will eventually develop disease.\nHowever, individually, a person might go from E to I on the first day, or after 10 days, this is unique to the individual.\nEvery additional day following exposure the probability of this individual to go from E → I increases (we will have a look at the probability distribution and its importance later).\n\n\nI → R\nThe period of communicability\nSimilarly, all infectious people will recover (or die).\nAgain, individually, a person might go from I to R in 5 days or in 15 days, this time is the recovery time and is proper to the individual.\n\n\n\nPopulation level dynamics\nMost basic models tend to disregard the notion of individual dynamics above in favor of poopulation level dynamics.\nThat is to say the models tend to model disease on a population level without looking at the specific pogression of disease within the individuals and using averages instead (although the S → E uses the same logic as above).\nBelow is an explanation for such an SEIR model with its mathematical formulation.\nNote no births or deaths are included.\n\nS → E\nAs stated above, going from S to E on a particular day depends on these three characteristics:\n\nthe proportion of infectious people in the population on that day: \\(i(t) = \\frac{I(t)}{N}\\)\nthe number of contacts an individual has per day: \\(r\\)\nthe chance for an S to contract the disease after contact with an I: \\(\\rho\\)\n\nWe can combine the last two into \\(\\beta = r  \\rho\\)\nOn a population-level however, the number of S that will become E also depends on the proportion of S in the population (of course if there are no S, no one will become E of course).\nSo we add the following requirement:\n\nthe proportion of susceptible people in the population on that day: \\(s(t) = \\frac{S(t)}{N}\\)\n\nSo the change in the number of S in a population on a given day is equal to:\n\\[ - \\beta i(t) s(t)\\]\n(note the negative sign to indicate the number of S is diminishing as they become exposed)\nHence we can formulate this mathematically as follows:\n\nDiscrete-time: \\[\\Delta S = -\\beta I S\\Delta T\\]\nContinuous-time: \\[\\frac{ds(t)}{dt}=-\\beta i(t) s(t)\\]\n\n\n\nE → I\nWe have seen above how each individual goes from E to I.\nOn a population level, the number of E changes in two ways:\n\nnew additions following S → E\nreduction following E → I\n\nWe already know the number from S → E is:\n\\[\\beta i(t) s(t)\\]\nSo how can we model the number of E → I?\nWhile individually this is a bit more complicated to model and pertains to the specific probability distribution of the latent period, on a population level we can use the average time it takes - this is what most models do (part 3 of this blog post will show why this is wrong for COVID-19).\nLet’s say average latent period is\n\\[\\frac{1}{\\sigma}\\]\nthen we know that every unit time that goes by, we have\n\\[\\sigma E\\]\nindividuals that transition from E → I.\nMathematically, we write this as :\n\nDiscrete-time: \\[\\Delta E = (\\beta I S-\\sigma E) \\Delta T\\]\nContinuous-time: \\[\\frac{de(t)}{dt}=\\beta i(t) s(t) - \\sigma e(t)\\]\n\n\n\nI → R\nSimilarly as above, we have seen above how each individual goes from I to R but this does not tell us about the population level dynamics.\nOn a population level, the number of I changes in two ways:\n\nnew additions following E → I\nreduction following I → R\n\nWe know the number from E → I is:\n\\[\\sigma e(t)\\]\nHow can we model the number of I → R?\nAgain, while individually this is complicated, on a population level, how about averaging out the period of infectiousness, this is what most models do.\nLet’s say average time of infectiousness is\n\\[\\frac{1}{\\gamma}\\]\nThen we have :\n\nDiscrete-time: \\[\\Delta I = (\\sigma E - \\gamma I) \\Delta T\\]\nContinuous-time: \\[\\frac{di(t)}{dt}=\\sigma e(t) - \\gamma i(t)\\]\n\n\n\nR → R\nFinally, it is simple to model the number of individuals in R state with the following equation:\n\nDiscrete-time: \\[\\Delta R = \\gamma I \\Delta T\\]\nContinuous-time: \\[\\frac{dr(t)}{dt}=\\gamma i(t)\\]"
  },
  {
    "objectID": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#effective-and-basic-reproduction-numbers-r-and-r_0-respectively",
    "href": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#effective-and-basic-reproduction-numbers-r-and-r_0-respectively",
    "title": "Epidemic modeling - Part 1",
    "section": "Effective and Basic Reproduction Numbers: \\(R\\) and \\(R_0\\) respectively",
    "text": "Effective and Basic Reproduction Numbers: \\(R\\) and \\(R_0\\) respectively\nAs stated above, \\(R_0\\) is the measure of secondary infections. Let’s have a look how we can characterize it.\n\nUnderstanding how the infection spreads\nAny individual in state I (infectious) will contaminate others according to the following:\n\nNumber of contacts the individual has per day given by: \\(r_i\\)\nProbability to infect an S after contact given by: \\(\\rho_i\\)\nProbability of a contact being with an S given by: \\(\\frac{S(t)}{N} = s(t)\\)\nThe period of infectiousness of the individual given by [\\(j_i, j_i+\\frac{1}{\\tau_i}\\)] (where \\(j_i\\) is the first day of infectiousness for that individual and \\(\\frac{1}{\\tau_i}\\) is that individuals’ time of infectiousness)\n\nRemember \\(r_i\\rho_i=\\beta_i\\)\n\n\nDerivation of \\(R\\) for each individual\nLet’s call the measure of \\(R\\) for any individual \\(R_i\\).\nFrom the parameters above we can write \\(R_i\\) for each infectious individual as the sum of secondary infections per day of infectiousness as below:\n\nDiscrete-time: \\[R_i = \\sum_{Day=j_i}^{j_i+\\frac{1}{\\tau_i}} \\beta_i \\frac{S(Day)}{N}\\] *Continuous-time: \\[R_i = \\int_{j_i}^{j_i+\\frac{1}{\\tau_i}} \\beta_i s(t) dt\\]\n\n\n\nFinding \\(R_0\\) of each individual by making assumptions\n\\(R_{0,i}\\) is the measure of \\(R_i\\) in a susceptible population, i.e. when: \\[S = N\\]\nIn other words: \\[R_{0,i} = R_i ~ \\frac{N}{S}\\]\nIf we make the following assumptions:\n\ns(t) is constant over the course of infectiousness of an individual: \\[s(t) = s(t+\\frac{1}{\\tau_i})\\]\n\\(\\beta_i\\) is a constant and does not vary over the course of time (no control measures)\n\nThen the equation for \\(R_{0,i}\\) reduces to the following: \\[R_{0,i} = [\\beta_i]_{j_i}^{j_i+\\frac{1}{\\tau_i}} = \\frac{\\beta_i}{\\tau_i}\\]\nWe can see the basic reproduction number of an individual is fully characterized by the \\(\\beta_i\\) and the \\(\\tau_i\\) of that individual.\n\n\n\\(R_0\\) for a population\nTo a generalize to a population-level, we can simply find the expected value for the equation above: \\[R_0 = E[R_{0,i}] = \\frac{E[\\beta_i]}{E[\\tau_i]}\\]\nAssuming:\n\n\\(E[\\beta_i] = \\beta\\)\n\\(E[\\tau_i] = \\gamma\\)\n\nWe can write: \\[R_0 = \\frac{\\beta}{\\gamma}\\]"
  },
  {
    "objectID": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#herd-immunity",
    "href": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#herd-immunity",
    "title": "Epidemic modeling - Part 1",
    "section": "Herd Immunity",
    "text": "Herd Immunity\nAs just described, \\(R\\) is the measure of secondary infections, and \\(R_0\\) is the measure of secondary infections in a susceptible population where \\(R=R_0~s(t)\\).\nIt is easy to understand that if each infectious individual contaminates less than 1 other individual on average (\\(R &lt; 1\\)) then the number of exposed, and eventually infectious, individuals will diminish and tend to 0.\nOn the other hand, if each infectious individual contaminates more than 1 other individual (\\(R &gt; 1\\)) then the number of infectious individuals will rise (chance of epidemic).\nMathematical formulation:\n\\[\\frac{d~e(t)}{dt} = \\beta~i(t)~s(t) - \\gamma~i(t)\\] \\[\\leftrightarrow\\frac{d~e(t)}{dt} = R_0~\\gamma~i(t)~s(t) - \\gamma~i(t)\\] \\[\\leftrightarrow\\frac{d~e(t)}{dt} = \\gamma~i(t)~(R_0~s(t) - 1)=\\gamma~i(t)~(R - 1)\\]\nAnd so we find that in a population where \\(\\gammaĩ(t)&gt;0\\): \\[\\frac{d~e(t)}{dt} = 0\\] \\[\\leftrightarrow R-1 = 0\\] \\[\\leftrightarrow R = 1\\]\nIf \\(R&lt;1\\) then \\(\\frac{d~e(t)}{dt} &lt; 0\\)\nHerd immunity threshold:\nThe herd immunity threshold is the point at which enough of the population is immune to the disease (not susceptible) in order to have \\(R &lt; 1\\) and can be calculated as follows: \\[R = R_0 ~ s(t)\\]\nWe know the proportion of the population immune to the disease is: \\[Immune(t) = 1-s(t)\\] \\[\\leftrightarrow\\ s(t)=1-Immune(t)\\]\nThe threshold of \\(R = 1\\) is achieved when: \\[R_0 ~s(t) = 1\\] \\[\\leftrightarrow\\ R_0 ~(1-Immune(t)) = 1\\] \\[\\leftrightarrow\\ 1-Immune(t) = \\frac{1}{R_0}\\] \\[\\leftrightarrow\\ Immune(t) = 1-\\frac{1}{R_0}\\]\nWhen the proportion of immune individuals in a population reaches \\(1-\\frac{1}{R_0}\\) then \\(R\\) will become smaller than 1 and the number of infectious individuals will diminish and tend to 0."
  },
  {
    "objectID": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#conclusion",
    "href": "posts/2020-03-15-compartmentalization/2020-03-15-compartmentalization.html#conclusion",
    "title": "Epidemic modeling - Part 1",
    "section": "Conclusion",
    "text": "Conclusion\nThis was a brief introduction to compartmentalization models and the dynamics associated with them.\nOf course these sort of derivations can be done for many different types of comprtaments and their relevant dynamics, but the SEIR is simple enough to understand and model quickly."
  },
  {
    "objectID": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#motivation-for-write-up",
    "href": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#motivation-for-write-up",
    "title": "Epidemic modeling - Part 3",
    "section": "Motivation for write-up",
    "text": "Motivation for write-up\nThis is the 3rd part of a multi-part series blog post on modeling in epidemiology.\nThe COVID-19 pandemic has brought a lot of attention to study of epidemiology and more specifically to the various mathematical models that are used to inform public health policies. Everyone has been trying to understand the growth or slowing of new cases and trying to predict the necessary sanitary resources. This blog post attempts to explain the foundations for some of the most used models and enlighten the reader on two key points.\nAfter introducing the concepts of compartmentalization and disease dynamics in the first blog post, the second part looked at a deterministic numerical solution for the SEIR model discussed, and the effects of the parameters \\(\\beta\\), \\(\\sigma\\), and \\(\\gamma\\).\nWhile arguments can be made that the compartments themselves don’t reflect the reality of COVID-19, this is not the point of this discussion; I want to focus on the idea that the population level dynamics forget about the individual progression of the disease.\nWith this mind, this third part is going to discuss the problems that arise when averaging the latent period (\\(\\frac{1}{\\sigma}\\)) and infectious period (\\(\\frac{1}{\\gamma}\\)) on the simulations.\nLet’s have a look at the individual progression of disease to understand what is wrong."
  },
  {
    "objectID": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#implications-of-deterministic-model",
    "href": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#implications-of-deterministic-model",
    "title": "Epidemic modeling - Part 3",
    "section": "Implications of deterministic model",
    "text": "Implications of deterministic model\n\n\nCode\n# Import required libraries\nimport pandas as pd\nimport numpy as np\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.io as pio\nfrom scipy.stats import poisson\nfrom scipy.stats import expon\nfrom scipy.stats import gamma\nfrom scipy.stats import weibull_min\n\nfrom prettytable import PrettyTable\nimport math\n\npio.renderers.default = \"plotly_mimetype+notebook_connected\"\n\n\n\n\nCode\ndef seir_model(init, parms, days):\n    S_0, E_0, I_0, R_0 = init\n    Epd, Ipd, Rpd = [0], [0], [0]\n    S, E, I, R = [S_0], [E_0], [I_0], [R_0]\n    dt=0.1\n    t = np.linspace(0,days,int(days/dt))\n    sigma, beta, gam = parms\n    for _ in t[1:]:\n        next_S = S[-1] - beta*S[-1]*I[-1]*dt\n        Epd.append(beta*S[-1]*I[-1]*dt)\n        next_E = E[-1] + (beta*S[-1]*I[-1] - sigma*E[-1])*dt\n        Ipd.append(sigma*E[-1]*dt)\n        next_I = I[-1] + (sigma*E[-1] - gam*I[-1])*dt\n        Rpd.append(gam*I[-1]*dt)\n        next_R = R[-1] + (gam*I[-1])*dt\n        S.append(next_S)\n        E.append(next_E)\n        I.append(next_I)\n        R.append(next_R)\n    return np.stack([S, E, I, R, Epd, Ipd, Rpd]).T\n\n\n\nLatent period \\(= T_{Latent} = \\frac{1}{\\sigma}\\)\nUsing the numerical model in part 2 and in order to see the distribution of E → I, we set the initial number of E to be the same as the population, and plot the number of E over time as below:\n\n\nCode\n# Define parameters\ndays = 30\nN = 10000\ninit = 0, N, 0, 0\nsigma = 1/5.2\nbeta = 0.5\ngam = 1/28.85\nparms = sigma, beta, gam\n\n# Plot simulation\nfig = go.Figure(data=[       \n    go.Scatter(name='E to I', x=np.linspace(0,days,days*10), y=100*(1-seir_model(init, parms, days).T[1]/N)), \n    go.Scatter(name='$\\\\text{Exponential distribution with} Scale = \\\\frac{1}{\\sigma}$', x=np.arange(days), y=100*expon.cdf(np.arange(days),loc=0,scale=1/sigma))\n])\n\nfig.update_layout(\n    title='Number of E moving to I over time when all population is exposed on day 0',\n    xaxis_title='Days',\n    yaxis_title='Percent of exposed having become infectious',\n    legend=dict(\n        x=0.6,\n        y=0,\n        traceorder=\"normal\",\n    )\n)\n\nfig.show()\n\n\n\n        \n        \n            \n            \n        \n\n\nThe plot above confirms the numerical model from part 2 assumes people go from E → I according to the exponential distribution.\n\n\nInfectious period \\(= T_{Infectious} = \\frac{1}{\\gamma}\\)\nThe same discussion above applies for the time from I → R here.\nFrom the discussion above, we know the numerical model in part 2 approximates the time from I → R as an exponential distribution.\nLet’s verifiy this in the plot below:\n\n\nCode\n# Define parameters\ndays = 100\nN = 10000\ninit = 0, 0, N, 0\nsigma = 1/5.2   # 1/5 --&gt; 5 days on average to go from E --&gt; I\nbeta = 0.5\ngam = 1/28.85     # 1/11 --&gt; 11 days on average to go from I --&gt; R\nparms = sigma, beta, gam\n\n# Plot simulation\nfig = go.Figure(data=[       \n    go.Scatter(name='I to R', x=np.linspace(0,days,days*10), y=100*(1-seir_model(init, parms, days).T[2]/N)), \n    go.Scatter(name='$\\\\text{Exponential distribution with} Scale = \\\\frac{1}{\\gamma}$', x=np.arange(days), y=100*expon.cdf(np.arange(days),loc=0,scale=1/gam))\n])\n\nfig.update_layout(\n    title='Number of I moving to R over time when all population is infectious on day 0',\n    xaxis_title='Days',\n    yaxis_title='Percent of infectious having become recovered',\n    legend=dict(\n        x=0.6,\n        y=0,\n        traceorder=\"normal\",\n    )\n)\n\nfig.show()\n\n\n\n        \n        \n            \n            \n        \n\n\nThe plot above confirms the numerical model from part 2 assumes people go from I → R according to the exponential distribution."
  },
  {
    "objectID": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#comparing-exponential-distribution-to-covid-19-data",
    "href": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#comparing-exponential-distribution-to-covid-19-data",
    "title": "Epidemic modeling - Part 3",
    "section": "Comparing exponential distribution to COVID-19 data",
    "text": "Comparing exponential distribution to COVID-19 data\nAs we have seen above, this deterministic model implies \\(T_{Latent}\\) and \\(T_{Infectious}\\) are exponentially distributed and we know the exponential distribution is uniquely characterized by its scale where: \\[scale = \\frac{1}{mean}\\]\n\nLatent period\nFor COVID-19, as we have seen in part 2 of the blog, research has shown the following for \\(T_{Latent}\\): * mean = 5.2 days * range is [2,14] days * 95th percentile is 12.5 days\nAssuming an exponential distribution, however, we would obtain the following:\n\n\\(mean = \\frac{1}{scale} = 5.2\\ days\\)\n95th percentile would be 16 days\nAfter the first day in state E, 18% would move into the state I (the fastest in real-world data was 2 days so this is not possible)\n\nWhile we can adjust to scale to fit the real-world mean, the distribution does not match the real-world data.\n\n\nInfectious period\nSimilarly as above, for COVID-19 we have seen research has shown the following for \\(T_{Infectious}\\): * median = 20 days * range is [8,37] days\nAssuming an exponential distribution, however, we would obtain the following:\n\n\\(mean = \\frac{median}{\\ln2} = \\frac{20}{\\ln2} = 28.85\\ days\\)\n95th percentile would be 87 days, while we’d likely want it to be around 37 days\nAfter the first day in state I, 18% would move into the state R (the fastest in real-world data was 8 days so this is not possible)\n\nWhile we can adjust to scale to fit the real-world mean, the distribution does not match the real-world data - and for a parameter that influences the overall simulation, it is pretty far off.\nLet’s see what distribution looks more likely."
  },
  {
    "objectID": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#finding-a-better-fit-gamma-or-weibull-distributions",
    "href": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#finding-a-better-fit-gamma-or-weibull-distributions",
    "title": "Epidemic modeling - Part 3",
    "section": "Finding a better fit: Gamma or Weibull distributions?",
    "text": "Finding a better fit: Gamma or Weibull distributions?\nWe have seen how different the actual COVID-19 \\(T_{Latent}\\) and \\(T_{Infectious}\\) were from the deterministic model using exponential distributions.\nHere we want to find a better distribution, and one that immediatly comes to mind is the Gamma distribution.\nAnother is the Weibull distribution.\n\nCharacterizing the Gamma distribution\nThe gamma distribution is characterized by its shape parameter \\(k\\) and its scale parameter \\(\\theta\\), where: \\[Mean = k~\\theta\\]\n\n\nCharacterizing the Weibull distribution\nSimilarly, the Weibull distribution is characterized by its shape parameter \\(k\\) and its scale parameter \\(\\theta\\), where: \\[Mean=\\lambda \\Gamma \\left(1+{\\frac {1}{k}}\\right)\\] And: \\[Median = \\lambda (\\ln 2)^{1/k}\\]\n\n\nGamma distributed latent period\nLet’s first find a Gamma distribution to match \\(T_{Latent}\\) data for COVID-19.\nThe mean is 5.2 days.\nThe range is [2,14] days and 95th percentile is 12.5 days, so we could translate this as follows: * 5th percentile = 2 days * 95th percentil = 12.5 days\n\\[Mean = k~\\theta\\] \\[\\leftrightarrow k~\\theta = 5.2\\] \\[\\leftrightarrow k = \\frac{5.2}{\\theta}\\]\nWe find the following parameters result in a pretty close distribution: * \\(loc = 1.8\\) * \\(k = 0.9\\) * \\(\\theta = \\frac{5.2-loc}{k} = 3.\\dot{7}\\)\n\n\nCode\np=100000\n\ndays=30\n\nk=0.9\nlocg=1.8\ntheta=(5.2-locg)/k\n\nscalee=5.2\n\ndf = pd.DataFrame({\n    'Exponential': expon.rvs(scale=scalee,size=p),\n    'Gamma': gamma.rvs(k,loc=locg,scale=theta,size=p)\n    })\n\nt=PrettyTable(['Distribution', 'Mean', 'Median', '5th percentile', '95th percentile'])\nt.add_row(['Exponential', df.Exponential.mean(), df.Exponential.median(), df.Exponential.quantile(q=0.05), df.Exponential.quantile(q=0.95)])\nt.add_row(['Gamma', df.Gamma.mean(), df.Gamma.median(), df.Gamma.quantile(q=0.05), df.Gamma.quantile(q=0.95)])\nprint(t)\n\nfig = go.Figure(data=[       \n    go.Scatter(name='Gamma E --&gt; I', x=np.arange(days), y=gamma.cdf(np.arange(days), k, loc=locg, scale=theta), line={'color':'red'}),\n    go.Scatter(name='Expon E --&gt; I', x=np.arange(days), y=expon.cdf(np.arange(days), scale=scalee), line={'color':'blue'}),\n])\n\nfig.update_layout(\n    title={\n        'text':'Exponential vs. Gamma CDF',\n        'x':0.5,\n        'xanchor':'center'\n    },\n    xaxis_title='Days',\n    yaxis_title='Percent of exposed having become infectious',\n    legend=dict(\n        x=1,\n        y=0,\n        traceorder=\"reversed\",\n    )\n)\n\nfig.show()\n\n\n+--------------+--------------------+--------------------+-------------------+--------------------+\n| Distribution |        Mean        |       Median       |   5th percentile  |  95th percentile   |\n+--------------+--------------------+--------------------+-------------------+--------------------+\n| Exponential  | 5.2136834266906975 | 3.6200357644671506 | 0.272017817562057 | 15.534008577412438 |\n|    Gamma     | 5.210224135704881  | 4.071295717213086  | 1.932313374060973 | 12.384630700699883 |\n+--------------+--------------------+--------------------+-------------------+--------------------+\n\n\n\n        \n        \n            \n            \n        \n\n\n\n#collapse_hide\np=10000\n\nk=0.9\nlocg=1.8\ntheta=(5.2-locg)/k\n\nscalee=5.2\n\ndf = pd.DataFrame({\n    'Exponential': expon.rvs(scale=scalee,size=p),\n    'Gamma': gamma.rvs(k,loc=locg,scale=theta,size=p)\n    })\n\nfig = px.histogram(df.stack().reset_index().rename(columns={\"level_1\": \"Distribution\"}), x=0, color=\"Distribution\", marginal='box')\nfig.update_layout(\n    title={\n        'text':'Exponential vs. Gamma distributions',\n        'x':0.5,\n        'xanchor':'center'\n    },\n    xaxis_title='Days',\n    yaxis_title='Count',\n    legend=dict(\n        x=1,\n        y=0,\n        traceorder=\"normal\",\n    )\n)\nfig.show()\n\n\n        \n        \n            \n            \n        \n\n\n\n\nGamma or Weibull distributed infectious period\nWhile we used a Gamma distribution for \\(T_{Latent}\\) above, we do not have a mean for \\(T_{Infectious}\\) data for COVID-19. We can still try to find a Gamma distribution that matches but it may be a bit more difficult to do.\nWith the median however, we could use the Weibull distribution as described earlier.\n\\[Median = \\lambda (\\ln 2)^{1/k}\\] \\[\\leftrightarrow \\lambda = \\frac{Median}{(\\ln 2)^{1/k}}\\] \\[\\leftrightarrow \\lambda = \\frac{20}{(\\ln 2)^{1/k}}\\]\nThe range is [8,37] days so we could translate this as follows: * 5th percentile = 8 days * 95th percentil = 37 days\nWe find the following parameters result in a pretty close Gamma distribution: * \\(loc = 3\\) * \\(k = 4\\) * \\(\\theta = 4.25\\)\nSimilarly, we find the following parameters result in a pretty close Weibull distribution: * \\(loc = 2\\) * \\(k = 2.3\\) * \\(\\lambda = \\frac{20-2}{(\\ln 2)^{1/k}} = 21.11\\)\n\n\nCode\np = 10000\n\ndays=80\n\nk=4\nlocg=3\ntheta=(20-locg)/k\n\nlocw=2\nwk = 2.3\nwl = (20-locw)/(math.log(2)**(1/wk))\n\nloce=0\nscale=28.85-loce\n\ndf = pd.DataFrame({\n    'Exponential': expon.rvs(loc=loce, scale=scale,size=p),\n    'Gamma': gamma.rvs(k,loc=locg,scale=theta,size=p),\n    'Weibull': weibull_min.rvs(wk, loc=locw, scale=wl,size=p)\n    })\n\nt=PrettyTable(['Distribution', 'Mean', 'Median', '5th percentile', '95th percentile'])\nt.add_row(['Exponential', df.Exponential.mean(), df.Exponential.median(), df.Exponential.quantile(q=0.05), df.Exponential.quantile(q=0.95)])\nt.add_row(['Gamma', df.Gamma.mean(), df.Gamma.median(), df.Gamma.quantile(q=0.05), df.Gamma.quantile(q=0.95)])\nt.add_row(['Weibull', df.Weibull.mean(), df.Weibull.median(), df.Weibull.quantile(q=0.05), df.Weibull.quantile(q=0.95)])\nprint(t)\n\nfig = go.Figure(data=[       \n    go.Scatter(name='Expon I --&gt; R', x=np.arange(days), y=expon.cdf(np.arange(days), loc=loce, scale=scale), line={'color':'blue'}),\n    go.Scatter(name='Gamma I --&gt; R', x=np.arange(days), y=gamma.cdf(np.arange(days), k, loc=locg, scale=theta), line={'color':'red'}),\n    go.Scatter(name='Weibull I --&gt; R', x=np.arange(days), y=weibull_min.cdf(np.arange(days), wk, loc=locw, scale=wl), line={'color':'green'})\n])\n\nfig.update_layout(\n    title={\n        'text':'Exponential vs. Gamma vs. Weibull CDF',\n        'x':0.5,\n        'xanchor':'center'\n    },\n    xaxis_title='Days',\n    yaxis_title='Percent of exposed having become infectious',\n    legend=dict(\n        x=1,\n        y=0,\n        traceorder=\"normal\",\n    )\n)\n\nfig.show()\n\n\n+--------------+-------------------+--------------------+-------------------+-------------------+\n| Distribution |        Mean       |       Median       |   5th percentile  |  95th percentile  |\n+--------------+-------------------+--------------------+-------------------+-------------------+\n| Exponential  | 28.98304180625598 | 19.707292436220364 |  1.4432618798358  |  86.339648010935  |\n|    Gamma     | 20.00090726355272 | 18.623259519648254 | 8.891619555537075 | 35.92106247158397 |\n|   Weibull    |  20.6640132987262 | 19.963146228513224 | 7.721215589638128 | 36.11760769672212 |\n+--------------+-------------------+--------------------+-------------------+-------------------+\n\n\n\n        \n        \n            \n            \n        \n\n\n\n\nCode\nk=4\nlocg=3\ntheta=(20-locg)/k\n\nlocw=2\nwk = 2.3\nwl = (20-locw)/(math.log(2)**(1/wk))\n\nloce=0\nscalee=28.85-loce\n\np=10000\n\ndf = pd.DataFrame({\n    'Exponential': expon.rvs(loc=loce, scale=scalee,size=p),\n    'Gamma': gamma.rvs(k,loc=locg,scale=theta,size=p),\n    'Weibull': weibull_min.rvs(wk, loc=locw, scale=wl,size=p)\n    })\n\nfig = px.histogram(df.stack().reset_index().rename(columns={\"level_1\": \"Distribution\"}), x=0, color=\"Distribution\", marginal='box')\nfig.update_layout(\n    title={\n        'text':'Exponential vs. Gamma vs. Weibull distributions',\n        'x':0.5,\n        'xanchor':'center'\n    },\n    xaxis_title='Days',\n    yaxis_title='Count',\n    legend=dict(\n        x=1,\n        y=0,\n        traceorder=\"normal\",\n    )\n)\nfig.show()"
  },
  {
    "objectID": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#discussion",
    "href": "posts/2020-03-25-proba-distrib/2020-03-25-proba-distrib.html#discussion",
    "title": "Epidemic modeling - Part 3",
    "section": "Discussion",
    "text": "Discussion\n\\(T_{Latent}\\) is nicely matched with a Gamma distribution.\n\\(T_{Infectious}\\) is nicely matched by a Weibull distribution.\nThe take away however is that the exponential distribution matches neither - and in the case of \\(T_{Infectious}\\) it is very far off.\nWe have seen in the previous posts that both of these periods have an impact on the peak proportion of infectious people and the duration of that peak.\nNaturally, we need to investigate further the impact of changing the distributions from exponential to Gamma and Weibull on the simulations.\nThis is done in the next blog post where I build a new model to be able to take into account the actual distributions."
  },
  {
    "objectID": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html",
    "href": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html",
    "title": "“Epidemic modeling - Part 5”",
    "section": "",
    "text": "“Further discussion on \\(R_0\\), distribution of \\(T_{Infectious}\\), and their impact on peak infectious in SEIR model”"
  },
  {
    "objectID": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html#motivation-for-write-up",
    "href": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html#motivation-for-write-up",
    "title": "“Epidemic modeling - Part 5”",
    "section": "Motivation for write-up",
    "text": "Motivation for write-up\nThis is the 5th part of a multi-part series blog post on modeling in epidemiology.\nThe COVID-19 pandemic has brought a lot of attention to the study of epidemiology and more specifically to the various mathematical models that are used to inform public health policies. Everyone has been trying to understand the growth or slowing of new cases and trying to predict the necessary sanitary resources. This blog post attempts to explain the foundations for some of the most used models and enlighten the reader on two key points.\nThe 1st part of the blog series showed an epidemic could occur when \\(R_0 &gt; 1\\) and that it was fully characerized by the average \\(\\beta\\) and the average \\(T_{Infectious}\\).\nWe have also seen that the higher \\(R_0\\), the faster and the higher the peak infectious will be.\nThe latest blog post however showed the importance of the distribution of \\(T_{Infectious}\\) to simulate the SEIR model and how it impacted the spread of the disease and the peak of infectious individuals. Even with lower \\(R_0\\) values, the infectious peak were higher when using Gamma or Weibull distributions for \\(T_{Infectious}\\).\nThis 5th installment examines this discrepancy further.\n\n#collapse_hide\n!pip install plotly==4.6.0\nimport pandas as pd\nimport numpy as np\nimport math\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom scipy.stats import expon\nfrom scipy.stats import gamma\nfrom scipy.stats import weibull_min\nfrom numpy.random import default_rng\nrng = default_rng()\n\n# Let's build a numerical solution\ndef seir_model(init, parms, days):\n    S_0, E_0, I_0, R_0 = init\n    Epd, Ipd, Rpd = [0], [0], [0]\n    S, E, I, R = [S_0], [E_0], [I_0], [R_0]\n    dt=0.1\n    t = np.linspace(0,days,int(days/dt))\n    sigma, beta, gam = parms\n    for _ in t[1:]:\n        next_S = S[-1] - beta*S[-1]*I[-1]*dt\n        Epd.append(beta*S[-1]*I[-1]*dt)\n        next_E = E[-1] + (beta*S[-1]*I[-1] - sigma*E[-1])*dt\n        Ipd.append(sigma*E[-1]*dt)\n        next_I = I[-1] + (sigma*E[-1] - gam*I[-1])*dt\n        Rpd.append(gam*I[-1]*dt)\n        next_R = R[-1] + (gam*I[-1])*dt\n        S.append(next_S)\n        E.append(next_E)\n        I.append(next_I)\n        R.append(next_R)\n    return np.stack([S, E, I, R, Epd, Ipd, Rpd]).T\n\nRequirement already satisfied: plotly==4.6.0 in /usr/local/lib/python3.6/dist-packages (4.6.0)\nRequirement already satisfied: retrying&gt;=1.3.3 in /usr/local/lib/python3.6/dist-packages (from plotly==4.6.0) (1.3.3)\nRequirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from plotly==4.6.0) (1.12.0)\n\n\n\n#collapse_hide\n# Need this new function for model below:\ndef make_df(p,num_E, num_I, num_R):\n  df = pd.DataFrame(np.full((p,1), 'S').T[0], columns=['State'])\n  df['Day'] = 0\n  tochange=df.loc[rng.choice(p, size=num_E+num_I+num_R, replace=False),'State'].index\n  df.loc[tochange[0:num_E],'State'] = 'E'\n  df.loc[tochange[num_E:num_I+num_E],'State'] = 'I'\n  df.loc[tochange[num_E+num_I:num_E+num_I+num_R],'State'] = 'R'\n  return df\n\n\n#collapse_hide\ndef seir_model_stoch(beta, p, num_E, num_I, num_R, days, T_Latent, T_Infectious):\n\n    # Initialize population dataframe with data given by user\n    df = make_df(p,num_E, num_I, num_R)\n    \n    # This variable is used to track daily value of beta if it varies over time\n    xxbeta=np.array([],dtype=float)\n\n    # Initialize the arrays to return\n    # Below are numbers of S, E, I, R total\n    S=np.array([],dtype=int)\n    E=np.array([],dtype=int)\n    I=np.array([],dtype=int)\n    R=np.array([],dtype=int)\n    # Below are the daily additions in S, E, I, R\n    Spd=np.array([],dtype=int)\n    Epd=np.array([],dtype=int)\n    Ipd=np.array([],dtype=int)\n    Rpd=np.array([],dtype=int)\n\n    b=beta\n    \n    # Stochastic model so use random values to decide on progression\n    rand = np.random.random(size=(p,days))\n\n    # Depending if you want exponential or gamma distribution for T_Latent\n    if T_Latent == 'expon':\n      EtoI = expon.rvs(loc=0,scale=5.2,size=p)\n    else:\n      EtoI = gamma.rvs(1.8,loc=0.9,scale=(5.2-1.8)/0.9,size=p)\n\n    # Depending if you want exponential, gamma, or Weibull distribution for T_Infectious\n    # Uses distributions found on blog part 3\n    if T_Infectious == 'expon':\n      ItoR = expon.rvs(loc=0,scale=28.85,size=p)\n    elif T_Infectious == 'gamma':\n      ItoR = gamma.rvs(4,loc=3,scale=4.25,size=p)    \n    else:\n      ItoR = weibull_min.rvs(2.3, loc=2, scale=20.11, size=p)\n\n    # Iterate over every day the simulation is run\n    for j in range(0,days-1):\n\n        # Record daily beta values\n        xxbeta=np.append(beta, b)\n\n        # First we get the index of the individuals that will change state today:\n\n        # Random number tells you which 'S' have been exposed on this day \n        StoE_index = df.loc[(df.State == 'S') & (rand[:,j] &lt; b[j]*len(np.where(df.State=='I')[0])/p)].index\n\n        # For each row, if a person has been a certain number of days in E, they will go to I\n        # This follows EtoI variable which is either exponential or gamma distributed according to above\n        EtoI_index = df.loc[(df.State == 'E') & (j-df.Day &gt;= EtoI)].index\n        \n        # Similaraly as above\n        # For each row, if a person has been a certain number of days in I, they will go to R\n        # This follows EtoI variable which is either exponential or gamma distributed according to above\n        ItoR_index = df.loc[(df.State == 'I') & (j-df.Day &gt;= ItoR)].index\n\n        # Use indexes collected above to populate per day values\n        Epd = np.append(Epd,len(StoE_index))\n        Ipd = np.append(Ipd,len(EtoI_index))\n        Rpd = np.append(Rpd,len(ItoR_index))\n\n        # Now we use the indexes collected above randomly to change the actual population dataframe to the new states\n        df.loc[ItoR_index, 'State'] = 'R'\n        df.loc[EtoI_index, 'State'] = 'I'\n        df.loc[StoE_index, 'State'] = 'E'\n        df.loc[ItoR_index, 'Day'] = j\n        df.loc[EtoI_index, 'Day'] = j\n        df.loc[StoE_index, 'Day'] = j\n        df.loc[ItoR_index, 'DayR'] = j\n        df.loc[EtoI_index, 'DayI'] = j\n        df.loc[StoE_index, 'DayE'] = j\n        \n        # Append the S, E, I, and R arrays\n        S=np.append(S,len(np.where(df.State=='S')[0]))\n        E=np.append(E,len(np.where(df.State=='E')[0]))\n        I=np.append(I,len(np.where(df.State=='I')[0]))\n        R=np.append(R,len(np.where(df.State=='R')[0]))\n\n        # Code below for control measures to reduce beta values\n#        if ((I[-1] &gt; 1000) & (Ipd[-1] &gt; 399)): \n#            b = beta2\n#        elif ((I[-1] &gt; 1000) & (Ipd[-1] &lt; 400)): \n#            b = beta3\n                \n    Epd[0]+=num_E\n    Ipd[0]+=num_I\n    Rpd[0]+=num_R\n\n    return S,E,I,R, Epd, Ipd, Rpd, xxbeta, df"
  },
  {
    "objectID": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html#peak-of-infectious-individuals",
    "href": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html#peak-of-infectious-individuals",
    "title": "“Epidemic modeling - Part 5”",
    "section": "Peak of infectious individuals",
    "text": "Peak of infectious individuals\nLet’s first try to characterize when the peak of infectious indiviuals occurs in the SEIR model.\nThe peak of infectious individuals occurs when the number of individuals that recover per day (\\(R_{pd}\\)) becomes greater than the number of new infectious individuals per day (\\(I_{pd}\\)), i.e. when: \\[R_{pd} \\geq I_{pd}\\]\n\nConvolution and daily numbers\nMathematical derivation of \\(I_{pd}\\):\nIn the stochastic model, the number of new infectious individuals per day is the sum of the daily new exposures per day of the previous days multiplied by the probability that they become infectious after so many days.\nWe write: \\[I_{pd}[j] = \\sum_{n_L=0}^{M_L-1}h_L[n_L]~E_{pd}[j-n_L]\\]\nMathematically, this means \\(I_{pd}[j]\\) is the result of convolution of \\(E_{pd}\\) and an impulse response \\(h_L[n]\\) where \\(h_L[n]\\) describes the distribution of \\(T_{Latent}\\), and we can write: \\[I_{pd}[j] = h_L[j]\\circledast E_{pd}[j]\\]\nFrom this derivation, we can see the \\(I_{pd}\\) depends on the distribution of \\(T_{Latent}\\) and \\(E_{pd}\\) (the number of new exposures per day) of the previous days.\nWhen initial conditions are the same, this means \\(T_{Infectious}\\) has no impact on \\(I_{pd}\\) and so the rate of new infectious individuals will look the same between the two models (exponential or gamma distributed \\(T_{Infectious}\\)).\nMathematical derivation of \\(R_{pd}\\):\nWe can similarly describe \\(R_{pd}[j]\\) as the result of convolution of \\(I_{pd}\\) and an impulse response \\(h_I[n]\\) where \\(h_I[n]\\) describes the distribution of \\(T_{Infectious}\\).\nIn other words: \\[R_{pd}[j] = \\sum_{n_I=0}^{M_I-1}h_I[n_I]~I_{pd}[j-n_I] = h_I[j]\\circledast I_{pd}[j]\\]\n\n\nWhen does the peak occur?\nIt occurs on day j where the threshold below is reached: \\[R_{pd}[j] = I_{pd}[j]\\] \\[\\leftrightarrow \\sum_{n_I=0}^{M_I-1}h_I[n_I]~I_{pd}[j-n_I] = \\sum_{n_L=0}^{M_L-1}h_L[n_L]~E_{pd}[j-n_L]\\]\nWhile this is complicated to solve analytically, we can look at the distribution of \\(T_{Infectious}\\) and get some clues as to what might happen with different distributions."
  },
  {
    "objectID": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html#i_pd-and-r_pd-for-t_infectious-sim-explambda-vs.-t_infectious-sim-weibulllambda-kgamma",
    "href": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html#i_pd-and-r_pd-for-t_infectious-sim-explambda-vs.-t_infectious-sim-weibulllambda-kgamma",
    "title": "“Epidemic modeling - Part 5”",
    "section": "\\(I_{pd}\\) and \\(R_{pd}\\) for \\(T_{Infectious} \\sim Exp(\\lambda)\\) vs. \\(T_{Infectious} \\sim Weibull(\\lambda, k,\\gamma)\\)",
    "text": "\\(I_{pd}\\) and \\(R_{pd}\\) for \\(T_{Infectious} \\sim Exp(\\lambda)\\) vs. \\(T_{Infectious} \\sim Weibull(\\lambda, k,\\gamma)\\)\n\n\\(T_{Infectious} \\sim Exp(28.85)\\) vs. \\(T_{Infectious} \\sim Weibull(2.3, 20.11, 2)\\)\nLet’s first have another look at the difference between these two distributions:\n\n#collapse_hide\nlocw=2\nwk = 2.3\nwl = (20-locw)/(math.log(2)**(1/wk))\n\nloce=0\nscalee=28.85-loce\n\np=10000\n\ndf = pd.DataFrame({\n    'Exponential': expon.rvs(loc=loce, scale=scalee,size=p),\n    'Weibull': weibull_min.rvs(wk, loc=locw, scale=wl,size=p)\n    })\n\nfig = px.histogram(df.stack().reset_index().rename(columns={\"level_1\": \"Distribution\"}), x=0, color=\"Distribution\", marginal='box')\nfig.update_layout(\n    title={\n        'text':'Exponential vs. Weibull distributions',\n        'x':0.5,\n        'xanchor':'center'\n    },\n    barmode='overlay',\n    xaxis_title='Days',\n    yaxis_title='Count',\n    legend=dict(\n        x=1,\n        y=0,\n        traceorder=\"normal\",\n    )\n)\nfig.show()\n\n\n\n\n    \n            \n                \n            \n            \n            \n        \n\n\n\n\n\n\nImpact on \\(I_{pd}\\) \\(R_{pd}\\):\nLet’s see how the two distributions of \\(T_{Infectious}\\) result in different curbs for \\(I_{pd}\\) and \\(R_{pd}\\).\n\n#collapse_hide\n# Define parameters for stochastic model\ndays = 200\np = 10000\nnum_E = 1\nnum_I = 0\nnum_R = 0\nbeta_stoch = 0.5*np.ones(days)\n\n# Run 2 stochastic simulations, 1 with exponential gamma, 1 with weibull gamma\nresults_stoch0 = seir_model_stoch(beta_stoch, p, num_E, num_I, num_R, days, 1, 'expon')\nresults_stoch1 = seir_model_stoch(beta_stoch, p, num_E, num_I, num_R, days, 1, 1)\n\n\n#collapse_hide\nfig = go.Figure(data=[    \n    go.Scatter(name='Ipd_Exp', x=np.arange(len(results_stoch0[0])), y=results_stoch0[5], line={'dash':'dashdot', 'color':'red'}, legendgroup=\"stoch4\"),\n    go.Scatter(name='Rpd_Exp', x=np.arange(len(results_stoch0[0])), y=results_stoch0[6], line={'dash':'dashdot', 'color':'green'}, legendgroup=\"stoch4\"),\n    go.Scatter(name='Ipd_Weibull', x=np.arange(len(results_stoch1[0])), y=results_stoch1[5], line={'dash':'solid', 'color':'red'}, legendgroup=\"stoch3\"),\n    go.Scatter(name='Rpd_Weibull', x=np.arange(len(results_stoch1[0])), y=results_stoch1[6], line={'dash':'solid', 'color':'green'}, legendgroup=\"stoch3\")\n])\n\nfig.update_layout(\n    xaxis_title = 'Day',\n    yaxis_title = 'Count',\n    title={\n        'text':r'$\\text{Effect of Exponential vs. Weibull distributed } T_{Infectious} \\text{ on } I_{pd} \\text{ and } R_{pd}$',\n        'x':0.5,\n        'xanchor':'center'\n    }\n)\n\nfig.show()\n\n\n\n\n    \n            \n                \n            \n            \n            \n        \n\n\n\n\n\n\nAnalysis:\nAs discussed above, we can see here \\(I_{pd}\\) are very similar between the two models.\nHowever, there are two key takeaways from these graphs:\n\nRise of total infectious individuals:\n\nThe Exponential distribution leads to more recoveries early on as the \\(R_{pd}\\) for the Exp distribution leads the \\(R_{pd}\\) of the Weibull distribution by ~6 days in the earl recovery period.\nIntuitively, we can thus understand that total infectious people will increase slower with the Eponential distribution than the Weibull distribution (since more people recover faster in the Exp model), and so the peak of infectious individuals will be earlier with the Weibull distribution.\n\nRecoveries:\n\nWhile the peak appears faster with a Weibull distribution, we also see that after the initial delay, the Weibull distribution leads to larger number of recoveries and so the total number of infectious individuals will tend to 0 much quicker than with the Exp distribution."
  },
  {
    "objectID": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html#discussion",
    "href": "posts/2020-04-01-diagnosing-R0-and-peak-infectious/2020-04-01-diagnosing-R0-and-peak-infectious.html#discussion",
    "title": "“Epidemic modeling - Part 5”",
    "section": "Discussion",
    "text": "Discussion\nWhile \\(R_0\\) seemed to be a good measure of the spread of disease and a good predictor of the peak of infectious individuals in a population, we find here that the actual distribution of \\(T_{Infectious}\\) plays a crucial role in detemining the dynamics of the SEIR model.\nThat is to say that while estimating \\(R_0\\) is important in times of epidemics or pandemics, finding the actual distributions of \\(T_{Latent}\\) and \\(T_{Infetious}\\) are equally important in predicting the impact of the disease."
  }
]